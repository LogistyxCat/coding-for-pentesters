#!/usr/bin/perl

#Name: Riley Scott
#Date: 2017-11-22
#Version: 1.0
#Description: Log sending client; sends log tarball to a designated server

use IO::Socket;
use Sys::Hostname;
use DateTime;
use Net::Ping;
$bandwidth = 1024*1000; # 1Mb/s
$hostname = hostname(); # Get machine hostname
$date = get_date(); # Get the current date

&send_file( $ARGV[0] , $ARGV[1]||'localhost' , $ARGV[2]||6123 );
exit;

#######################
# SEND FILE TO SERVER #
#######################

sub send_file {
  my ( $log_dir , $host , $port ) = @_;

  print "[*] Creating temporary archive of $log_dir on $date\n";
  $file = tar_log($log_dir);

  if (! -s $file) { die "[!] ERROR! Can't find or blank file $file" ;}
  my $file_size = -s $file;

  my $file_sum = hash_check($file);

  my ($file_name) = ( $file =~ /([^\\\/]+)[\\\/]*$/gs );

  pingcheck($host);

  my $sock = new IO::Socket::INET(
     PeerAddr => $host,
     PeerPort => $port,
     Proto    => 'tcp',
     Timeout  => 30);

  if (! $sock) { die "[!] ERROR! Can't connect\n"; }
  $sock->autoflush(1);

  print "[*] Successfully connected to $host\n";
  print "[*] Sending $file_name\n[*] $file_size bytes.";

  print $sock "$hostname!:!"; # send this machine's hostname.
  print $sock "$file_name#:#"; # send the file name.
  print $sock "$file_sum&:&"; # send the file hashsum
  print $sock "$file_size\_"; # send the size of the file to server.

  open (FILE,$file) ; binmode(FILE);

  my $buffer;
  while( sysread(FILE, $buffer , $bandwidth) ) {
    print $sock $buffer;
    print ".";
    sleep(1);
  }
  print "OK\n";

  print "[*] Removing temporary archive...";
  `rm $file`;
  print "OK\n\n";

  close (FILE);
  close($sock);
}

# Performs a pingcheck to see if target host is alive
sub pingcheck {
  my $host = shift;

  print "[*] Performing ping check on $host...\n";
  $pinger = Net::Ping->new("icmp", 1, 64);
  if ($pinger->ping($host)) {
    print "[*] Ping successful\n[*] Attempting to connect...\n";
  }
  else {
    print "[!] Failed to contact $host\n[!] Will attempt to connect...\n";
  }
}

# Create archive of log directory
sub tar_log {
  my $logs = shift;
  `tar -jcf /tmp/$hostname-$date.tar.bz2 $logs`;
  return "/tmp/$hostname-$date.tar.bz2";
}

# Get the current date
sub get_date {

  my $dt = DateTime->now;
  my $dom = $dt->mday;
  my $month = $dt->month_abbr;
  my $year = $dt->year;

  return "$dom$month$year"
}

# Performs an SHA1 check on file
sub hash_check {
  my $file = shift;

  $sha1 = `sha1sum $file`;
  @foo = split(/ +/, $sha1);
  $sum = @foo[0];

  print "[*] SHA1 sum: $sum\n";
  return $sum;
}
