#!/usr/bin/perl

#Name: Riley Scott
#Date: 2017-11-13
#Version: 1.1
#Description: Check MAC address, using 'ether' in ipconfig, 2nd

#fetch OUI database from IEEE
`wget -N http://standards.ieee.org/develop/regauth,oui/oui.txt 2>/dev/null`;

open (LOG, ">>maclog.log") || die "Cannot open maclog.log for append $!\n";

$netinfo = `ifconfig | grep ether`;
print "Network information is ",$netinfo,"\n";
print LOG "Network information is ",$netinfo,"\n";
$netinfo =~ m/((?:[0-9a-f]{2}[:-]){5}[0-9a-f]{2})/i;

$mac = $&; #set var mac as previous successful match in var netinfo
print "The MAC address is ",$mac,"\n";
print LOG "The MAC address is ",$mac,"\n";
@macparts = split /:/, $mac;

@ouiparts = splice(@macparts,0,3);
$oui = join('',@ouiparts);
print "The OUI is ",$oui,"\n";
print LOG "The OUI is ",$oui,"\n";

open (OUIDB,"oui.txt") || die "Cannot open oui.txt $!\n";
while (<OUIDB>) {
  $line = $_; #$_ is the implicit scalar variable
  #print "Line is ",$line,"oui is ",$oui,"\n";
  if($line =~ /$oui/i) {
    @ouientry = $line;
    last;
  }else {
    @ouientry[0] = "Manufacturer not found";
  }
}
close (OUIDB) or die "Cannot close oui.txt $!\n";

@ouientryfields = split(/\t/,@ouientry[0]);

print "The manufacturer is ",@ouientryfields[2],"\n";
print LOG "The manufacturer is ",@ouientryfields[2],"\n";
print LOG "******************************************\n";

close (LOG) or die "Cannot close maclog.log $!\n";
